//Queue implement array
class Queue
{    
  constructor(c)
  {
      this.front = this.rear = 0;
      this.capacity = c;
      this.queue = new Array(this.capacity);
  }
  QueueEnqueue(data)
  {
      if (this.capacity == this.rear)
      {
          console.log("Queue is full:");
          return;
      }
      else
      {
          this.queue[this.rear] = data;
          this.rear++;
      }
      return;
  }
  QueueDequeue()
  {
      if (this.front == this.rear)
      {
          console.log("Queue is empty:");
          return;
      }
      else
      {
          for(let i = 0; i < this.rear - 1; i++)
          {
              this.queue[i] = this.queue[i + 1];
          }   
          if (this.rear < this.capacity)
              this.queue[this.rear] = 0;

          this.rear--;
      }
      return;
  }
  QueueDisplay()
  {
      let i;
      if (this.front == this.rear)
      {
          console.log("Queue is Empty:");
          return;
      }

      for(i = this.front; i < this.rear; i++)
      {
          console.log(this.queue[i] + "  <-- ");
      }
      return;
  }
  QueueFront()
  {
      if (this.front == this.rear)
      {
          console.log("Queue is Empty:");
          return;
      }
      console.log("Front Element is: " + this.queue[this.front]);
      return;
  }
  }
  let q = new Queue(7);
  q.QueueDisplay();
  q.QueueEnqueue(20);
  q.QueueEnqueue(30);
  q.QueueEnqueue(40);
  q.QueueEnqueue(50);
  q.QueueEnqueue(60);
  q.QueueEnqueue(70);
  q.QueueEnqueue(80);
  q.QueueDisplay();
  q.QueueEnqueue(60);
  q.QueueDisplay();
  q.QueueDequeue();
  q.QueueDequeue();
  console.log("After the last two node Deletion: ");
  q.QueueDisplay();
  q.QueueFront();
  //Output-
//  Queue is Empty:
//  20  <-- 
//  30  <--
//  40  <--
//  50  <--
//  60  <--
//  70  <--
//  80  <--
//  Queue is full:
//  20  <--
//  30  <--
//  40  <--
//  50  <--
//  60  <--
//  70  <--
//  80  <--
//  After the last two node Deletion:
//  40  <--
//  50  <--
//  60  <--
//  70  <--
//  80  <--
//  Front Element is: 40
